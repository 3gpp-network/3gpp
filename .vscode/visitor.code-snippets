{
	// Place your 3gpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Vistor": {
		"scope": "typescript",
		"prefix": "visitor",
		"body": [
			"import { AbstractParseTreeVisitor } from 'antlr4ts/tree/AbstractParseTreeVisitor';",
			"",
			"import { ASN_3gppVisitor } from '../ASN_3gppVisitor';",
			"",
			"/**",
			" * ANTLR4 grammar",
			" * ```",
			" * ```",
			" */",
			"export class ObjectSetSpecVisitor extends AbstractParseTreeVisitor<any /* TODO */>",
			"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timplements ASN_3gppVisitor<any /* TODO */> {",
			"\tpublic defaultResult(): any /* TODO */ {",
			"\t\t// TODO",
			"\t}",
			"",
			"\tpublic visitChildren(/* TODO */): any /* TODO */ {",
			"\t\t// TODO",
			"\t}",
			"}",
			""
		],
		"description": "Visitor skeleton"
	}
}
